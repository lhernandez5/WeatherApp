{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Weather_App/weather_app/src/components/Search/Search.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = ({\n  onSearchChange\n}) => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions).then(response => response.json()).then(response => console.log(response.json())).catch(err => console.log(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","onSearchChange","_s","search","setSearch","loadOptions","inputValue","fetch","then","response","json","console","log","catch","err","handleOnChange","searchData","placeholder","debounceTimeout","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Weather_App/weather_app/src/components/Search/Search.js"],"sourcesContent":["import { useState } from \"react\";\nimport { AsyncPaginate } from \"react-select-async-paginate\"; \nimport { GEO_API_URL, geoApiOptions} from \"../../api\";\n\nconst Search = ({onSearchChange}) => {\n    const [search, setSearch] = useState(null);\n\n    const loadOptions = (inputValue) =>{\n        return fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions)\n                .then(response=>response.json())\n                .then(response=>console.log(response.json()))\n                .catch(err=>console.log(err));\n    }\n    \n    const handleOnChange = (searchData) =>{\n        setSearch(searchData);\n        onSearchChange(searchData);\n    }\n\n    return (\n        <AsyncPaginate placeholder = \"Search for city\"\n        debounceTimeout={600}\n        value={search}\n        onChange={handleOnChange}\n        loadOptions={loadOptions}\n        />\n    );\n}\n\nexport default Search;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,aAAa,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMW,WAAW,GAAIC,UAAU,IAAI;IAC/B,OAAOC,KAAK,CAAE,GAAEX,WAAY,4CAA2CU,UAAW,EAAC,EAAET,aAAa,CAAC,CAC1FW,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC/BF,IAAI,CAACC,QAAQ,IAAEE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC5CG,KAAK,CAACC,GAAG,IAAEH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,cAAc,GAAIC,UAAU,IAAI;IAClCZ,SAAS,CAACY,UAAU,CAAC;IACrBf,cAAc,CAACe,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIjB,OAAA,CAACJ,aAAa;IAACsB,WAAW,EAAG,iBAAiB;IAC9CC,eAAe,EAAE,GAAI;IACrBC,KAAK,EAAEhB,MAAO;IACdiB,QAAQ,EAAEL,cAAe;IACzBV,WAAW,EAAEA;EAAY;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAAtB,EAAA,CAvBKF,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}