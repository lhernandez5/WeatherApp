{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Weather_App/weather_app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/Search/Search';\nimport CurrentWeather from './components/CurrentWeather/currentWeather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    console.log(searchData);\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","useState","forecast","setForecast","handleOnSearchChange","searchData","console","log","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Weather_App/weather_app/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/Search/Search';\nimport CurrentWeather from './components/CurrentWeather/currentWeather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\n\nfunction App() {\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState(null);\n\n  const handleOnSearchChange=(searchData)=>{\n    console.log(searchData);\n    const[lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    \n    Promise.all([currentWeatherFetch,forecastFetch])\n      .then(async (response) =>{\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n        \n        setCurrentWeather({ city: searchData.label, ...weatherResponse});\n        setForecast({ city: searchData.label, ...forecastResponse});\n      })\n      .catch((err) => console.log(err));\n  }\n\n  console.log(currentWeather);\n  console.log(forecast);\n  \n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange}/>\n      <CurrentWeather />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,4CAA4C;AACvE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMG,oBAAoB,GAAEC,UAAU,IAAG;IACvCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB,MAAK,CAACG,GAAG,EAAEC,GAAG,CAAC,GAAGJ,UAAU,CAACK,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE7C,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAEpB,eAAgB,gBAAee,GAAI,QAAOC,GAAI,UAASf,eAAgB,EAAC,CAAC;IAC9G,MAAMoB,aAAa,GAAGD,KAAK,CAAE,GAAEpB,eAAgB,iBAAgBe,GAAI,QAAOC,GAAI,UAASf,eAAgB,EAAC,CAAC;IAEzGqB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAACE,aAAa,CAAC,CAAC,CAC7CG,IAAI,CAAC,MAAOC,QAAQ,IAAI;MACvB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEjDpB,iBAAiB,CAAC;QAAEsB,IAAI,EAAEjB,UAAU,CAACkB,KAAK;QAAE,GAAGJ;MAAe,CAAC,CAAC;MAChEhB,WAAW,CAAC;QAAEmB,IAAI,EAAEjB,UAAU,CAACkB,KAAK;QAAE,GAAGF;MAAgB,CAAC,CAAC;IAC7D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKnB,OAAO,CAACC,GAAG,CAACkB,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDnB,OAAO,CAACC,GAAG,CAACR,cAAc,CAAC;EAC3BO,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErB,oBACEN,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/B,OAAA,CAACL,MAAM;MAACqC,cAAc,EAAExB;IAAqB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/CpC,OAAA,CAACJ,cAAc;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAAClC,EAAA,CA/BQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}